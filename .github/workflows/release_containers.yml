---
name: Release Containers
on:
  # https://github.com/actions/runner/issues/1007
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  release-containers:
    name: Build and Push container - ${{ matrix.containers.name }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        containers:
          - name: badrobot
            file: ./Dockerfile
            suffix: ""
          - name: badrobot alpine
            file: ./Dockerfile.alpine
            suffix: -alpine

    steps:
      - name: Cache container layers
        uses: actions/cache@v4.2.3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}${{ matrix.containers.suffix }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}${{ matrix.containers.suffix }}-buildx-

      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate container tags and labels
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: controlplane/badrobot
          tags: |
            type=semver,pattern=v{{version}}
            type=semver,pattern=v{{major}}
          flavor: |
            latest=${{ matrix.containers.suffix == '' }}
            suffix=${{ matrix.containers.suffix }}
          labels: |
            org.opencontainers.image.vendor=controlplane

      - name: Login to Docker Hub Registry
        uses: docker/login-action@v3.4.0
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Login to GitHub Container Registry
      #   uses: docker/login-action@v3.4.0
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.repository_owner }}
      #     password: ${{ secrets.CR_PAT }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Build container and push tags
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          file: ${{ matrix.containers.file }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: mode=max,type=local,dest=/tmp/.buildx-cache
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          build-args: |
            VERSION=${{ fromJSON(steps.docker_meta.outputs.json).labels['org.opencontainers.image.version'] }}
            COMMIT=${{ fromJSON(steps.docker_meta.outputs.json).labels['org.opencontainers.image.revision'] }}
